parameters:
- name: 'applications' 
  type: object  



stages:
- stage: Local
  displayName: ${{ parameters.stageName }} #'Deploy  ${{ parameters.stageName }}'
  jobs:
  - deployment: deploymentProd1
    displayName: 'Deployment'
    timeoutInMinutes: 10
    variables:
      - template: ./vars-web.yml
      - template: ./vars-windows.yml      
    environment: 
      name: ${{ parameters.environment }}
      resourceType: VirtualMachine
    strategy: 
        runOnce:
          preDeploy:
            steps:
            - script: echo initialize, cleanup, backup, install certs
          deploy:
            steps:
            
            - task: IISWebAppManagementOnMachineGroup@0
              displayName: 'Stop Application Pool'
              inputs:
                IISDeploymentType: 'IISApplicationPool'
                ActionIISApplicationPool: 'StopAppPool'
                StartStopRecycleAppPoolName: ${{variables.applicationPoolApi}}
            
            - ${{ if eq(parameters.applications.additionalTariff, true) }}:
              - template: deploy-web.yml
                parameters:
                  websiteName: ${{variables.webSiteAdditionalTariff}}
                  packageName: ${{variables.packageAdditionalTariff}}

            - ${{ if eq(parameters.applications.b2b, true) }}:
              - template: deploy-web.yml
                parameters:
                  websiteName: ${{variables.webSiteB2B}}
                  packageName: ${{variables.packageB2B}}

            - ${{ if eq(parameters.applications.businessPartner, true) }}:
              - template: deploy-web.yml
                parameters:
                  websiteName: ${{variables.webSiteBusinessPartner}}
                  packageName: ${{variables.packageBusinessPartner}}

            - ${{ if eq(parameters.applications.customsInventory, true) }}:
              - template: deploy-web.yml
                parameters:
                  websiteName: ${{variables.webSiteCustomsInventory}}
                  packageName: ${{variables.packageCustomsInventory}}

            - ${{ if eq(parameters.applications.declarationSetting, true) }}:
              - template: deploy-web.yml
                parameters:
                  websiteName: ${{variables.webSiteDeclarationSetting}}
                  packageName: ${{variables.packageDeclarationSetting}}

            - ${{ if eq(parameters.applications.declarationStatus, true) }}:
              - template: deploy-web.yml
                parameters:
                  websiteName: ${{variables.webSiteDeclarationStatus}}
                  packageName: ${{variables.packageDeclarationStatus}}

            - ${{ if eq(parameters.applications.dropDownValues, true) }}:
              - template: deploy-web.yml
                parameters:
                  websiteName: ${{variables.webSiteDropDownValues}}
                  packageName: ${{variables.packageDropDownValues}}

            - ${{ if eq(parameters.applications.lotAndJobNumber, true) }}:
              - template: deploy-web.yml
                parameters:
                  websiteName: ${{variables.webSiteLotAndJobNumber}}
                  packageName: ${{variables.packageLotAndJobNumber}}

            - ${{ if eq(parameters.applications.mco, true) }}:
              - template: deploy-web.yml
                parameters:
                  websiteName: ${{variables.webSiteMCO}}
                  packageName: ${{variables.packageMCO}}

            - ${{ if eq(parameters.applications.product, true) }}:
              - template: deploy-web.yml
                parameters:
                  websiteName: ${{variables.webSiteProduct}}
                  packageName: ${{variables.packageProduct}}

            - ${{ if eq(parameters.applications.receivingCountry, true) }}:
              - template: deploy-web.yml
                parameters:
                  websiteName: ${{variables.webSiteReceivingCountry}}
                  packageName: ${{variables.packageReceivingCountry}}

            - ${{ if eq(parameters.applications.tallySheet, true) }}:
              - template: deploy-web.yml
                parameters:
                  websiteName: ${{variables.webSiteTallySheet}}
                  packageName: ${{variables.packageTallySheet}}
                
            - task: IISWebAppManagementOnMachineGroup@0
              displayName: 'Start Application Pool'
              inputs:
                IISDeploymentType: 'IISApplicationPool'
                ActionIISApplicationPool: 'StartAppPool'
                StartStopRecycleAppPoolName: ${{variables.applicationPoolApi}}
            
#            - task: ExtractFiles@1
#              displayName: 'Extract File'
#              inputs:
#                archiveFilePatterns: 'C:\azagent\A1\_work\1\drop\*.zip'
#                destinationFolder: ${{variables.serviceBasePath}}
#                cleanDestinationFolder: true
#                overwriteExistingFiles: false         
                
          on: 
            failure: 
              steps: 
              - script: echo clean-up, rollback...   
            success: 
              steps: 
              - script: echo checks passed, notify...
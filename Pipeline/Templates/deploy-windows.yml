parameters:
- name: 'packageName' 
  type: string
- name: 'serviceName'
  type: string
  
steps:

- task: PowerShell@2
  displayName: 'Uninstall Service' 
  inputs:
    targetType: 'inline'
    script: |
       Get-Service -Name ${{parameters.serviceName}} -ErrorVariable getServiceError -ErrorAction SilentlyContinue
       
       #If there is no serive simply proceed further by logging message.
       if ($getServiceError)
       {
           Write-Warning "There is no service named ${{parameters.serviceName}}."
       }
       else
       {
           Write-Information "Uninstalling service named ${{parameters.serviceName}}."
           C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe -U ${{parameters.serviceName}}
       }

- task: ExtractFiles@1
  displayName: 'Extract File'
  inputs:
    archiveFilePatterns: 'C:\package\ServiceShipment.zip'
    destinationFolder: 'C:\Service\'
    cleanDestinationFolder: true
    overwriteExistingFiles: false   

- task: PowerShell@2
  displayName: 'Install Service'
  inputs:
    targetType: 'inline'
    script: |
       Write-Information "Installing service named ${{parameters.serviceName}}."
       C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe -I ${{variables.serviceBasePath}}\${{parameters.packageName}}
       
    

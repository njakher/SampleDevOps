parameters:
- name: 'stageName'
  type: string
- name: 'environment'
  type: string
- name: 'applications' 
  type: object  

stages:
- stage: ${{ parameters.stageName }}
  displayName: 'Deploy  ${{ parameters.stageName }}'
  jobs:
  - deployment: deploymentProd1
    displayName: 'Deployment'
    timeoutInMinutes: 10
    variables:
      - template: ./vars-web.yml
      - template: ./vars-windows.yml      
    environment: 
      name: ${{ parameters.environment }}
      resourceType: VirtualMachine
    strategy: 
        runOnce:
          preDeploy:
            steps:
            - script: echo initialize, cleanup, backup, install certs
          deploy:
            steps:
            
            - task: IISWebAppManagementOnMachineGroup@0
              displayName: 'Stop Application Pool'
              inputs:
                IISDeploymentType: 'IISApplicationPool'
                ActionIISApplicationPool: 'StopAppPool'
                StartStopRecycleAppPoolName: 'mcoapi'
            
            - template: deploy-web.yml
              parameters:
                websiteName: ${{variables.webSiteAdditionalTariff}}
                packageName: ${{variables.packageAdditionalTariff}}

            - ${{ if eq(parameters.applications.b2b, true) }}:
            - template: deploy-web.yml
              parameters:
                websiteName: ${{variables.webSiteB2B}}
                packageName: ${{variables.packageB2B}}

            - template: deploy-web.yml
              parameters:
                websiteName: ${{variables.webSiteBusinessPartner}}
                packageName: ${{variables.packageBusinessPartner}}

            - template: deploy-web.yml
              parameters:
                websiteName: ${{variables.webSiteCustomsInventory}}
                packageName: ${{variables.packageCustomsInventory}}

            - template: deploy-web.yml
              parameters:
                websiteName: ${{variables.webSiteDeclarationSetting}}
                packageName: ${{variables.packageDeclarationSetting}}

            - template: deploy-web.yml
              parameters:
                websiteName: ${{variables.webSiteDeclarationStatus}}
                packageName: ${{variables.packageDeclarationStatus}}

            - template: deploy-web.yml
              parameters:
                websiteName: ${{variables.webSiteDropDownValues}}
                packageName: ${{variables.packageDropDownValues}}

            - template: deploy-web.yml
              parameters:
                websiteName: ${{variables.webSiteLotAndJobNumber}}
                packageName: ${{variables.packageLotAndJobNumber}}

            - template: deploy-web.yml
              parameters:
                websiteName: ${{variables.webSiteMCO}}
                packageName: ${{variables.packageMCO}}

            - template: deploy-web.yml
              parameters:
                websiteName: ${{variables.webSiteProduct}}
                packageName: ${{variables.packageProduct}}

            - template: deploy-web.yml
              parameters:
                websiteName: ${{variables.webSiteReceivingCountry}}
                packageName: ${{variables.packageReceivingCountry}}

            - template: deploy-web.yml
              parameters:
                websiteName: ${{variables.webSiteTallySheet}}
                packageName: ${{variables.packageTallySheet}}
                
            - task: IISWebAppManagementOnMachineGroup@0
              displayName: 'Start Application Pool'
              inputs:
                IISDeploymentType: 'IISApplicationPool'
                ActionIISApplicationPool: 'StartAppPool'
                StartStopRecycleAppPoolName: 'mcoapi'
            
            - task: ExtractFiles@1
              displayName: 'Extract File'
              inputs:
                archiveFilePatterns: 'C:\azagent\A1\_work\1\drop\*.zip'
                destinationFolder: ${{variables.serviceBasePath}}
                cleanDestinationFolder: true
                overwriteExistingFiles: false         
                
          on: 
            failure: 
              steps: 
              - script: echo clean-up, rollback...   
            success: 
              steps: 
              - script: echo checks passed, notify...
name: SampleDemo_$(Date:yyyymmdd)$(Rev:r)

trigger: none

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages: 
 - stage: build
   displayName: 'Build Solution'
   jobs:
   - job: 'BuildAndPublish'
     displayName: 'Build and Publish' 
     pool:
      vmImage: 'windows-2022'

     steps:
  
      - task: UseDotNet@2
        displayName: 'Use .NET Core sdk'
        inputs:
            packageType: 'sdk'
            version: '6.0.x'
            includePreviewVersions: true

      - task: NuGetToolInstaller@1

      - task: NuGetCommand@2
        displayName: 'Restore NuGet Package'
        name: 'RestorePackage'
        inputs:
            command: 'restore'
            restoreSolution: $(solution)
            feedsToUse: 'select'

      - template: build.yml
        parameters:
          project: '**/Web1.csproj'
          packageName: Web1
      
      - template: build.yml
        parameters:
          project: '**/Web2.csproj'
          packageName: Web2

#      - task: MSBuild@1
#        inputs:
#          solution: '**/Web2.csproj'
#          msbuildArguments: '/p:DeployOnBuild=True /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:publishUrl=$(Build.ArtifactStagingDirectory)\Web2'
#          platform: '$(buildPlatform)'
#          configuration: '$(buildConfiguration)'

#      - task: MSBuild@1
#        inputs:
#          solution: '**/Web1.csproj'
#          msbuildArguments: '/p:DeployOnBuild=True /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:publishUrl=$(Build.ArtifactStagingDirectory)\Web1'
#          platform: '$(buildPlatform)'
#          configuration: '$(buildConfiguration)'

      - task: MSBuild@1
        inputs:
          solution: '**/WindowsService.csproj'
          msbuildArguments: '/p:DeployOnBuild=True /p:OutDir=$(Build.ArtifactStagingDirectory)/WindowsService'
          platform: 'AnyCPU'
          configuration: '$(buildConfiguration)'

#      - task: ArchiveFiles@2
#        inputs:
#          rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/Web1'
#          includeRootFolder: true
#          archiveType: 'zip'
#          archiveFile: '$(Build.ArtifactStagingDirectory)/package/Web1.zip'
#          replaceExistingArchive: true

#      - task: ArchiveFiles@2
#        inputs:
#          rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/Web2'
#          includeRootFolder: true
#          archiveType: 'zip'
#          archiveFile: '$(Build.ArtifactStagingDirectory)/package/Web2.zip'
#          replaceExistingArchive: true

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/WindowsService'
          includeRootFolder: true
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/package/WindowsService.zip'
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/package'
          ArtifactName: 'drop'
          publishLocation: 'Container'
      
 - template: deploy.yml
   parameters:
    stageName: dev
    environment: DEV

 - template: deploy.yml
   parameters:
    stageName: prod
    environment: PROD


